Index: linux-3.4.11/include/linux/netfilter_bridge/ebt_ip.h
===================================================================
--- linux-3.4.11.orig/include/linux/netfilter_bridge/ebt_ip.h	2020-08-18 18:03:53.643872132 +0800
+++ linux-3.4.11/include/linux/netfilter_bridge/ebt_ip.h	2020-08-19 18:04:11.554673166 +0800
@@ -43,7 +43,7 @@
  EBT_IP_SPORT | EBT_IP_DPORT | EBT_IP_LENGTH | EBT_IP_TCP_FLAGS |\
  EBT_IP_DHCP_OPT60 | EBT_IP_DHCP_OPT61 | EBT_IP_DHCP_OPT77 | EBT_IP_DHCP_OPT125)
 #endif
-#define DHCP_OPTION_MAX_LEN 556 /* IP header(20) + UDP header(8)+ DHCP header(528) */
+#define DHCP_OPTION_MAX_LEN 576 /* IP header(20) + UDP header(8)+ DHCP header(548) */
 
 #define DHCP_PADDING                            0x00
 #define DHCP_VENDOR                             0x3c    /*option 60 */
Index: linux-3.4.11/net/bridge/netfilter/ebt_ip.c
===================================================================
--- linux-3.4.11.orig/net/bridge/netfilter/ebt_ip.c	2020-08-18 18:03:55.007872118 +0800
+++ linux-3.4.11/net/bridge/netfilter/ebt_ip.c	2020-08-19 18:00:46.866251900 +0800
@@ -268,8 +268,17 @@
             memset(payload, 0, sizeof(payload));
             skb_data_len = skb->len;
 
-            if (skb_copy_bits(skb, 0, payload, skb_data_len))
-                            printk("Copy packet is failed by ebtables of filtering DHCP Option\n\r");
+            if(skb_data_len > sizeof(payload)) {
+                printk(KERN_ERR "%s: payload has no enough buffer to store complete dhcp packet\n\r", __FUNCTION__);
+                if(skb_copy_bits(skb, 0, payload, sizeof(payload))) {
+                    printk("Copy packet is failed by ebtables of filtering DHCP Option\n\r");
+                }
+            }
+            else {
+                if (skb_copy_bits(skb, 0, payload, skb_data_len)) {
+                    printk("Copy packet is failed by ebtables of filtering DHCP Option\n\r");
+                }
+            }
 
             dhcpPtr = (struct dhcpMessage *)(payload + sizeof(struct iphdr) + sizeof(struct udphdr));
 
