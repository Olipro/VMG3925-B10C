Index: linux-3.4.11/net/netfilter/nfnetlink_queue.c
===================================================================
--- linux-3.4.11.orig/net/netfilter/nfnetlink_queue.c	2018-09-01 15:31:27.404806669 +0800
+++ linux-3.4.11/net/netfilter/nfnetlink_queue.c	2018-09-01 15:31:27.412806669 +0800
@@ -37,6 +37,8 @@
 #include "../bridge/br_private.h"
 #endif
 
+#include "zld/zld_cb_data.h"
+
 #define NFQNL_QMAX_DEFAULT 1024
 
 struct nfqnl_instance {
@@ -357,10 +359,16 @@
 		}
 #endif
 	}
-
+#if 0
+printk("%s: mark=%x, zextmark=%x\n",__FUNCTION__,entskb->mark,ZLD_CB_DATA(entskb)->zextmark);
+#endif
 	if (entskb->mark)
 		NLA_PUT_BE32(skb, NFQA_MARK, htonl(entskb->mark));
 
+#ifdef CONFIG_ZYXEL_EXT_MARK
+	if (ZLD_CB_DATA(entskb)->zextmark)
+		NLA_PUT_BE32(skb, NFQA_ZEXTMARK, htonl(ZLD_CB_DATA(entskb)->zextmark));
+#endif
 	if (indev && entskb->dev &&
 	    entskb->mac_header != entskb->network_header) {
 		struct nfqnl_msg_packet_hw phw;
@@ -634,12 +642,18 @@
 static const struct nla_policy nfqa_verdict_policy[NFQA_MAX+1] = {
 	[NFQA_VERDICT_HDR]	= { .len = sizeof(struct nfqnl_msg_verdict_hdr) },
 	[NFQA_MARK]		= { .type = NLA_U32 },
+#ifdef CONFIG_ZYXEL_EXT_MARK
+	[NFQA_ZEXTMARK]		= { .type = NLA_U32 },
+#endif
 	[NFQA_PAYLOAD]		= { .type = NLA_UNSPEC },
 };
 
 static const struct nla_policy nfqa_verdict_batch_policy[NFQA_MAX+1] = {
 	[NFQA_VERDICT_HDR]	= { .len = sizeof(struct nfqnl_msg_verdict_hdr) },
 	[NFQA_MARK]		= { .type = NLA_U32 },
+#ifdef CONFIG_ZYXEL_EXT_MARK
+	[NFQA_ZEXTMARK]		= { .type = NLA_U32 },
+#endif
 };
 
 static struct nfqnl_instance *verdict_instance_lookup(u16 queue_num, int nlpid)
@@ -718,6 +732,11 @@
 	list_for_each_entry_safe(entry, tmp, &batch_list, list) {
 		if (nfqa[NFQA_MARK])
 			entry->skb->mark = ntohl(nla_get_be32(nfqa[NFQA_MARK]));
+
+#if defined(CONFIG_SBG_SKB_MARK)//jessy
+		if (nfqa[NFQA_ZEXTMARK])
+			ZLD_CB_DATA(entry->skb)->zextmark = ntohl(nla_get_be32(nfqa[NFQA_ZEXTMARK]));
+#endif
 		nfqnl_reinject(entry, verdict);
 	}
 	return 0;
@@ -760,7 +779,10 @@
 
 	if (nfqa[NFQA_MARK])
 		entry->skb->mark = ntohl(nla_get_be32(nfqa[NFQA_MARK]));
-
+#if defined(CONFIG_SBG_SKB_MARK)//jessy
+	if (nfqa[NFQA_ZEXTMARK])
+			ZLD_CB_DATA(entry->skb)->zextmark = ntohl(nla_get_be32(nfqa[NFQA_ZEXTMARK]));
+#endif
 	nfqnl_reinject(entry, verdict);
 	return 0;
 }
Index: linux-3.4.11/include/linux/netfilter/nfnetlink_log.h
===================================================================
--- linux-3.4.11.orig/include/linux/netfilter/nfnetlink_log.h	2012-09-15 06:18:55.000000000 +0800
+++ linux-3.4.11/include/linux/netfilter/nfnetlink_log.h	2018-09-01 15:31:27.412806669 +0800
@@ -36,6 +36,7 @@
 	NFULA_UNSPEC,
 	NFULA_PACKET_HDR,
 	NFULA_MARK,			/* __u32 nfmark */
+	NFULA_ZEXTMARK,			/* u_int32_t nfzextmark */
 	NFULA_TIMESTAMP,		/* nfulnl_msg_packet_timestamp */
 	NFULA_IFINDEX_INDEV,		/* __u32 ifindex */
 	NFULA_IFINDEX_OUTDEV,		/* __u32 ifindex */
Index: linux-3.4.11/net/netfilter/nfnetlink_log.c
===================================================================
--- linux-3.4.11.orig/net/netfilter/nfnetlink_log.c	2012-09-15 06:18:55.000000000 +0800
+++ linux-3.4.11/net/netfilter/nfnetlink_log.c	2018-09-01 15:31:27.412806669 +0800
@@ -39,6 +39,8 @@
 #include "../bridge/br_private.h"
 #endif
 
+#include "zld/zld_cb_data.h"
+
 #define NFULNL_NLBUFSIZ_DEFAULT	NLMSG_GOODSIZE
 #define NFULNL_TIMEOUT_DEFAULT 	100	/* every second */
 #define NFULNL_QTHRESH_DEFAULT 	100	/* 100 packets */
@@ -452,6 +454,11 @@
 
 	if (skb->mark)
 		NLA_PUT_BE32(inst->skb, NFULA_MARK, htonl(skb->mark));
+#if defined(CONFIG_SBG_SKB_MARK)//jessy
+	if (ZLD_CB_DATA(skb)->zextmark)
+		NLA_PUT_BE32(inst->skb, NFULA_ZEXTMARK, htonl(ZLD_CB_DATA(skb)->zextmark));
+#endif
+
 
 	if (indev && skb->dev &&
 	    skb->mac_header != skb->network_header) {
Index: linux-3.4.11/net/netfilter/xt_connzextmark.c
===================================================================
--- linux-3.4.11.orig/net/netfilter/xt_connzextmark.c	2018-09-01 15:31:27.388806669 +0800
+++ linux-3.4.11/net/netfilter/xt_connzextmark.c	2018-09-01 15:31:27.412806669 +0800
@@ -29,11 +29,11 @@
 	if (ct == NULL)
 		return XT_CONTINUE;
 
-
+#if 0
     printk("[%s %d]info->mode[0x%x],ct->zextmark (0x%x),newmark(0x%x)\n",
             __FUNCTION__,__LINE__,
             info->mode,ct->zextmark ,newmark);
-
+#endif
 
 	switch (info->mode) {
 	case XT_CONNMARK_SET:
@@ -57,11 +57,11 @@
 		ZLD_CB_DATA(skb)->zextmark = newmark;
 		break;
 	}
-
+#if 0
     printk("[%s %d]info->mode[0x%x],ct->zextmark (0x%x),newmark(0x%x)\n",
             __FUNCTION__,__LINE__,
             info->mode,ct->zextmark ,newmark);
-            
+ #endif
 	return XT_CONTINUE;
 }
 
Index: linux-3.4.11/net/netfilter/xt_zextmark.c
===================================================================
--- linux-3.4.11.orig/net/netfilter/xt_zextmark.c	2018-09-01 15:31:27.388806669 +0800
+++ linux-3.4.11/net/netfilter/xt_zextmark.c	2018-09-01 15:31:27.412806669 +0800
@@ -36,11 +36,11 @@
 {
 	const struct xt_mark_tginfo2 *markinfo = par->targinfo;
 	int mark = 0;
-
+#if 0
     printk("[%s %d]markinfo->mode(0x%x) ZLD_CB_DATA(skb)->zextmark(0x%x)\n",
             __FUNCTION__,__LINE__,
             markinfo->mode,ZLD_CB_DATA(skb)->zextmark);
-
+#endif
 	switch (markinfo->mode) {
 		case XT_MARK_SET:
 			mark = markinfo->mark;
@@ -72,9 +72,12 @@
 #endif
     
 	ZLD_CB_DATA(skb)->zextmark = mark;
+
+#if 0
     printk("[%s %d]markinfo->mode(0x%x) ZLD_CB_DATA(skb)->zextmark(0x%x)\n",
             __FUNCTION__,__LINE__,
             markinfo->mode,ZLD_CB_DATA(skb)->zextmark);
+#endif
 	return XT_CONTINUE;
 }
 
@@ -104,10 +107,11 @@
 {
 	const struct xt_mark_mtinfo1 *info = par->matchinfo;
 
+#if 0
     printk("[%s %d]return (%d)\n",
             __FUNCTION__,__LINE__,
             ((ZLD_CB_DATA(skb)->zextmark & info->mask) == info->mark) ^ info->invert);
-            
+#endif
 	return ((ZLD_CB_DATA(skb)->zextmark & info->mask) == info->mark) ^ info->invert;
 }
 
Index: linux-3.4.11/net/netfilter/nf_conntrack_netlink.c
===================================================================
--- linux-3.4.11.orig/net/netfilter/nf_conntrack_netlink.c	2018-09-01 15:31:27.388806669 +0800
+++ linux-3.4.11/net/netfilter/nf_conntrack_netlink.c	2018-09-01 17:43:16.428739377 +0800
@@ -942,8 +942,9 @@
 	[CTA_ZONE]		= { .type = NLA_U16 },
 	[CTA_MARK_MASK]		= { .type = NLA_U32 },
 #ifdef CONFIG_ZYXEL_EXT_MARK
 	[CTA_ZEXTMARK]		= { .type = NLA_U32 }, // 20180620 jessy zyxel
+	[CTA_ZEXTMARK_MASK]		= { .type = NLA_U32 }, // 20180620 jessy zyxel
 #endif
 };
 
 static int
@@ -1035,10 +1036,10 @@
 		};
 #ifdef CONFIG_NF_CONNTRACK_MARK
 #ifndef CONFIG_ZYXEL_EXT_MARK
 		if (cda[CTA_MARK] && cda[CTA_MARK_MASK]) {
 #else
-		if ((cda[CTA_MARK] && cda[CTA_MARK_MASK]) || cda[CTA_ZEXTMARK]) {  // 20180620 jessy zyxel
+		if ((cda[CTA_MARK] && cda[CTA_MARK_MASK]) || (cda[CTA_ZEXTMARK]&& cda[CTA_ZEXTMARK_MASK])) {  // 20180620 jessy zyxel
 #endif
 			struct ctnetlink_dump_filter *filter;
 
 			filter = kzalloc(sizeof(struct ctnetlink_dump_filter),
@@ -1046,15 +1047,16 @@
 			if (filter == NULL)
 				return -ENOMEM;
 #ifdef CONFIG_ZYXEL_EXT_MARK
-            if (cda[CTA_MARK] && cda[CTA_MARK_MASK])   // 20180621 jessy zyxel
-            {
-			    filter->mark.val = ntohl(nla_get_be32(cda[CTA_MARK]));
-			    filter->mark.mask =
-				    ntohl(nla_get_be32(cda[CTA_MARK_MASK]));	
-		    }
-			
-			if (cda[CTA_ZEXTMARK])    // 20180621 jessy zyxel
-			    filter->zextmark.val = ntohl(nla_get_be32(cda[CTA_ZEXTMARK]));
+			if (cda[CTA_MARK] && cda[CTA_MARK_MASK])  { // 20180621 jessy zyxel
+				    filter->mark.val = ntohl(nla_get_be32(cda[CTA_MARK]));
+				    filter->mark.mask =
+					    ntohl(nla_get_be32(cda[CTA_MARK_MASK]));
+			}
+
+			if (cda[CTA_ZEXTMARK] && cda[CTA_ZEXTMARK_MASK])  {  // 20180621 jessy zyxel
+				filter->zextmark.val = ntohl(nla_get_be32(cda[CTA_ZEXTMARK]));
+				filter->zextmark.mask = ntohl(nla_get_be32(cda[CTA_ZEXTMARK_MASK]));
+			}
 #endif
 			c.data = filter;
 		}
Index: linux-3.4.11/include/linux/netfilter/nfnetlink_conntrack.h
===================================================================
--- linux-3.4.11.orig/include/linux/netfilter/nfnetlink_conntrack.h	2018-09-01 15:31:27.388806669 +0800
+++ linux-3.4.11/include/linux/netfilter/nfnetlink_conntrack.h	2018-09-01 17:34:34.956743814 +0800
@@ -44,7 +44,10 @@
 	CTA_SECCTX,
 	CTA_TIMESTAMP,
 	CTA_MARK_MASK,
+	CTA_LABELS,
+	CTA_LABELS_MASK,
 	CTA_ZEXTMARK,  // zyxel jessy 20180621
+	CTA_ZEXTMARK_MASK,  // zyxel jessy 20180621
 	__CTA_MAX
 };
 #define CTA_MAX (__CTA_MAX - 1)
