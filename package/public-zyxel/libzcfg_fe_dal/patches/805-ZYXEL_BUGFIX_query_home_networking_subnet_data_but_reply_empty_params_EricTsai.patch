Index: libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_addnl_subnet.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/homeNetworking/zcfg_fe_dal_addnl_subnet.c	2020-08-14 17:55:17.500307825 +0800
+++ libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_addnl_subnet.c	2020-08-14 17:58:14.152302728 +0800
@@ -371,12 +371,16 @@
 #endif		
 		for(i=0;i<len;i++){
 			reqObject = json_object_array_get_idx(WanLanList, i);
+			const char *ipIfacePath = json_object_get_string(json_object_object_get(reqObject, "IpIfacePath"));
+			char ipIfaceIdx = 0;
+			char n = sscanf(ipIfacePath, "IP.Interface.%hhu", &ipIfaceIdx);
+
 			wanlanlist_name = json_object_get_string(json_object_object_get(reqObject, "Name"));
-			if(!strcmp(bridge_name,wanlanlist_name)){
+			if(n && !strcmp(bridge_name,wanlanlist_name)){
 				IID_INIT(ipv4AddrIid);
 				IID_INIT(Iid);
 				ipv4AddrIid.level = 1;
-				ipv4AddrIid.idx[0] = i + 1;
+				ipv4AddrIid.idx[0] = ipIfaceIdx;
 				while(zcfgFeSubInObjJsonGetNextWithoutUpdate(RDM_OID_IP_IFACE_V4_ADDR, &ipv4AddrIid, &Iid, &ipv4AddrObj) == ZCFG_SUCCESS){
 					if(json_object_get_boolean(json_object_object_get(ipv4AddrObj, "X_ZYXEL_Alias"))
 						&& strstr(json_object_get_string(json_object_object_get(ipv4AddrObj, "X_ZYXEL_Dhcp4Subnet_Ref")), "DHCPv4.Server.X_ZYXEL_Subnet") == NULL){
@@ -423,9 +427,12 @@
 				}
 				zcfgFeJsonObjFree(ipv4AddrObj);
 
+
+
 				IID_INIT(ipIfaceIid);
 				ipIfaceIid.level = 1;
-				ipIfaceIid.idx[0] = i + 1;
+				ipIfaceIid.idx[0] = ipIfaceIdx;
+
 				if(zcfgFeObjJsonGet(RDM_OID_IP_IFACE, &ipIfaceIid, &ipIfaceObj) == ZCFG_SUCCESS){
 					json_object_object_add(paramJobj, "PubLan_Enable", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_PubLan")));
 					json_object_object_add(paramJobj, "PubLan_IP", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_PubLan_IP")));
