Index: libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/broadband/zcfg_fe_dal_broadband.c	2019-12-02 16:04:15.078107679 +0800
+++ libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c	2019-12-02 16:06:07.391298300 +0800
@@ -177,6 +177,8 @@
 struct json_object *v6AddrObj = NULL;
 struct json_object *dnsObj = NULL;
 
+struct json_object *featureFlagObj = NULL;
+
 objIndex_t atmLinkIid = {0};
 objIndex_t atmLinkQosIid = {0};
 objIndex_t ptmLinkIid = {0};
@@ -1621,6 +1623,7 @@
 	//sprintf(optEnableName, "option%dEnable", Tag); //ex. option60Enable
 	sprintf(optValueName, "option%dValue", Tag); //ex. option60Value
 	//Enable = json_object_get_boolean(json_object_object_get(Jobj, optEnableName));
+	const char *dhcpOption61Mode = featureFlagObj ? json_object_get_string(json_object_object_get(featureFlagObj, "DHCPOption61Mode")) : NULL;
 
 	if(Tag==60){
 		opt60Val = json_object_get_string(json_object_object_get(Jobj, "option60Value"));
@@ -1631,13 +1634,18 @@
 	else if(Tag==61){
 		char *tmpIaid = NULL;
 		char *tmpDuid = NULL;
-		if(json_object_object_get(Jobj, "option61Iaid"))
-			tmpIaid = json_object_get_string(json_object_object_get(Jobj, "option61Iaid"));
-		if(json_object_object_get(Jobj, "option61Duid"))
-			tmpDuid = json_object_get_string(json_object_object_get(Jobj, "option61Duid"));
-		if(json_object_object_get(Jobj, "option61Iaid")&&json_object_object_get(Jobj, "option61Duid")){
-			opt61ValEncode(tmpIaid,tmpDuid,Value,Tag);
-			json_object_object_add(Jobj,"option61Value",json_object_new_string(Value));
+		if(dhcpOption61Mode && !strcmp(dhcpOption61Mode, "ADDRDOMAIN")){
+			json_object_object_add(Jobj, "option61Value", json_object_new_string(""));
+		}else{
+			// default DUIDEN
+			if(json_object_object_get(Jobj, "option61Iaid"))
+				tmpIaid = json_object_get_string(json_object_object_get(Jobj, "option61Iaid"));
+			if(json_object_object_get(Jobj, "option61Duid"))
+				tmpDuid = json_object_get_string(json_object_object_get(Jobj, "option61Duid"));
+			if(json_object_object_get(Jobj, "option61Iaid")&&json_object_object_get(Jobj, "option61Duid")){
+				opt61ValEncode(tmpIaid,tmpDuid,Value,Tag);
+				json_object_object_add(Jobj,"option61Value",json_object_new_string(Value));
+			}
 		}
 	}
     else if(Tag == 125){
@@ -1849,8 +1857,10 @@
 	bool needSet = false;
 	char tmp[256]={0}, Value[256]={0};
 	char *newValue = NULL;
-	
+
+
 	oid = RDM_OID_DHCPV4_SENT_OPT;
+	const char *dhcpOption61Mode = featureFlagObj ? json_object_get_string(json_object_object_get(featureFlagObj, "DHCPOption61Mode")) : NULL;
 	
 	if(*optObj){
 		CurrOptEnable = json_object_get_boolean(json_object_object_get(*optObj, "Enable"));
@@ -1880,14 +1890,18 @@
 	else if(Tag==61 && optEnable){
 		char *tmpIaid = NULL;
 		char *tmpDuid = NULL;
-		if(json_object_object_get(Jobj, "option61Iaid"))
-			tmpIaid = json_object_get_string(json_object_object_get(Jobj, "option61Iaid"));
-		if(json_object_object_get(Jobj, "option61Duid"))
-			tmpDuid = json_object_get_string(json_object_object_get(Jobj, "option61Duid"));
-		if(json_object_object_get(Jobj, "option61Iaid")&&json_object_object_get(Jobj, "option61Duid")){
-			strcpy(tmp,"");
-			opt61ValEncode(tmpIaid,tmpDuid,tmp,Tag);
-			strcpy(Value, tmp);
+		if(dhcpOption61Mode && !strcmp(dhcpOption61Mode, "ADDRDOMAIN")){
+			strcpy(Value, CurrValue);
+		}else{
+			if(json_object_object_get(Jobj, "option61Iaid"))
+				tmpIaid = json_object_get_string(json_object_object_get(Jobj, "option61Iaid"));
+			if(json_object_object_get(Jobj, "option61Duid"))
+				tmpDuid = json_object_get_string(json_object_object_get(Jobj, "option61Duid"));
+			if(json_object_object_get(Jobj, "option61Iaid")&&json_object_object_get(Jobj, "option61Duid")){
+				strcpy(tmp,"");
+				opt61ValEncode(tmpIaid,tmpDuid,tmp,Tag);
+				strcpy(Value, tmp);
+			}
 		}
 	}
 	else if(Tag==125 && optEnable){
@@ -2870,6 +2884,8 @@
 	if(dynamicDnsClientSrv4Obj) zcfgFeJsonObjFree(dynamicDnsClientSrv4Obj);
 	if(dynamicDnsClientSrv6Obj) zcfgFeJsonObjFree(dynamicDnsClientSrv6Obj);
 	
+	if(featureFlagObj) zcfgFeJsonObjFree(featureFlagObj);
+
 	return ret;
 }
 
@@ -3520,14 +3536,14 @@
 	bool checkDuplicateVlan = true;
 	IID_INIT(iid);
 	iid.idx[0] = 0;
-	if(ZCFG_SUCCESS==zcfgFeObjJsonGetWithoutUpdate(RDM_OID_FEATURE_FLAG, &iid, &obj)){
-		checkDuplicateVlan = json_object_get_boolean(json_object_object_get(obj, "checkDuplicateVlan"));
+	if(ZCFG_SUCCESS==zcfgFeObjJsonGetWithoutUpdate(RDM_OID_FEATURE_FLAG, &iid, &featureFlagObj)){
+		checkDuplicateVlan = json_object_get_boolean(json_object_object_get(featureFlagObj, "checkDuplicateVlan"));
 		if(false ==checkDuplicateVlan){
-			if(obj) zcfgFeJsonObjFree(obj);
+			//if(obj) zcfgFeJsonObjFree(obj);
 			return false;
 		}
 	}
-	if(obj) zcfgFeJsonObjFree(obj);
+	//if(obj) zcfgFeJsonObjFree(obj);
 	/*support duplicate vlan by config. end*/
 
 	Name = Jgets(Jobj, "Name");
@@ -4456,6 +4472,8 @@
 		v4FwdObj = NULL;
 #endif
 
+		const char *dhcpOption61Mode = featureFlagObj ? json_object_get_string(json_object_object_get(featureFlagObj, "DHCPOption61Mode")) : NULL;
+
 		//DHCP REQ OPT
 		IID_INIT(iid);
 		while(zcfgFeSubInObjJsonGetNextWithoutUpdate(RDM_OID_DHCPV4_REQ_OPT, &v4ClientIid, &iid, &obj) == ZCFG_SUCCESS){
@@ -4496,13 +4514,19 @@
 				}
 			}else if(tag == 61 ){
 				json_object_object_add(pramJobj, "option61Enable", json_object_new_boolean(opt));
-				char iaidVal[256]={0};
-				char duidVal[256]={0};
-				if(opt){
-					opt61ValDecode(value,iaidVal,duidVal);
+				if(dhcpOption61Mode && !strcmp(dhcpOption61Mode, "ADDRDOMAIN")){
+					char addrDomain[256] = {0};
+
+					json_object_object_add(pramJobj, "option61Value", json_object_new_string(addrDomain));
+				}else{ // default
+					char iaidVal[256]={0};
+					char duidVal[256]={0};
+					if(opt){
+						opt61ValDecode(value,iaidVal,duidVal);
+					}
+					json_object_object_add(pramJobj, "option61Iaid", json_object_new_string(iaidVal));
+					json_object_object_add(pramJobj, "option61Duid", json_object_new_string(duidVal));
 				}
-				json_object_object_add(pramJobj, "option61Iaid", json_object_new_string(iaidVal));
-				json_object_object_add(pramJobj, "option61Duid", json_object_new_string(duidVal));
 			}else if(tag == 125 ){
 				json_object_object_add(pramJobj, "option125Enable", json_object_new_boolean(opt));
 				json_object_object_add(pramJobj, "option125Value", json_object_new_string(value));
@@ -4695,6 +4719,11 @@
 	struct json_object *pramJobj = NULL;
 	struct json_object *ipIfObj = NULL;
 	initGlobalObjects();
+
+	objIndex_t featureFlagIid;
+	IID_INIT(featureFlagIid);
+	zcfgFeObjJsonGetWithoutUpdate(RDM_OID_FEATURE_FLAG, &featureFlagIid, &featureFlagObj);
+
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_IP_IFACE, &ipIfaceIid, &ipIfObj) == ZCFG_SUCCESS) {
 		
 		pramJobj = json_object_new_object();
