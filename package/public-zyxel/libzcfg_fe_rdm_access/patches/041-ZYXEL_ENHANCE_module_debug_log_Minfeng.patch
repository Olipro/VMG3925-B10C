Index: libzcfg_fe_rdm_access-1.0/zcfg_fe_rdm_access.c
===================================================================
--- libzcfg_fe_rdm_access-1.0.orig/zcfg_fe_rdm_access.c	2020-01-18 07:17:35.105683041 +0000
+++ libzcfg_fe_rdm_access-1.0/zcfg_fe_rdm_access.c	2020-01-18 07:18:27.475377527 +0000
@@ -13,6 +13,7 @@
 #include "zcfg_msg.h"
 #include "zcfg_eid.h"
 #include "zcfg_debug.h"
+#include "zcfg_msg_zysh.h"
 
 void *schemaShmAddr = NULL;
 void *objNameShmAddr = NULL;
@@ -584,3 +585,47 @@
 	return len;
 }
 
+zcfgRet_t zcfgFeZyshCmdSend(int eid, uint32_t cmd, int value, char *param,int len, char *zysh_ret)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	int payloadLen = 0;
+	void *sendBuf = NULL;
+	void *recvBuf = NULL;
+	zcfgMsg_t *sendMsgHdr = NULL;
+	zcfgMsg_t *recvMsgHdr = NULL;
+	zcfgZysh_t *zysh;
+
+	sendBuf = (void *)malloc(sizeof(zcfgMsg_t) + sizeof(zcfgZysh_t));
+	sendMsgHdr = (zcfgMsg_t *)sendBuf;
+	sendMsgHdr->type = ZCFG_MSG_ZYSH_EXE_ROOT_CMD;
+	sendMsgHdr->length = sizeof(zcfgZysh_t);
+	sendMsgHdr->dstEid = eid;
+
+	zysh = (zcfgZysh_t *) (sendMsgHdr + 1);
+	zysh->value = value;
+	zysh->cmd = cmd;
+	if(param != NULL )
+		memcpy(zysh->buf,param,len);
+
+	ret = zcfgMsgSendAndGetReply(sendMsgHdr, (zcfgMsg_t **)&recvBuf, 0);
+	if(ret == ZCFG_SUCCESS) {
+		recvMsgHdr = (zcfgMsg_t*)recvBuf;
+		ret = recvMsgHdr->statCode;
+		if ( recvMsgHdr->type == RESPONSE_FAIL ) {
+			ret = recvMsgHdr->statCode;
+		}
+		else {
+			if (recvMsgHdr->length && ( zysh_ret != NULL ) ) {
+				memcpy(zysh_ret, ( recvMsgHdr + 1 ), sizeof( zcfgZysh_t ) );
+			}
+
+		}
+	}
+	else {
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	free(recvBuf);
+	return ret;
+}
+
Index: libzcfg_fe_rdm_access-1.0/zcfg_fe_rdm_access.h
===================================================================
--- libzcfg_fe_rdm_access-1.0.orig/zcfg_fe_rdm_access.h	2020-01-18 07:17:35.105683041 +0000
+++ libzcfg_fe_rdm_access-1.0/zcfg_fe_rdm_access.h	2020-01-18 07:17:35.129681984 +0000
@@ -61,4 +61,6 @@
 int zcfgFeObjMaxLenGet(zcfg_offset_t rdmObjId);
 int zcfgFeArrayLengthGetByName(char* tr181path);
 
+extern zcfgRet_t zcfgFeZyshCmdSend(int eid, uint32_t cmd, int value, char *param,int len, char *zysh_ret);
+
 #endif
