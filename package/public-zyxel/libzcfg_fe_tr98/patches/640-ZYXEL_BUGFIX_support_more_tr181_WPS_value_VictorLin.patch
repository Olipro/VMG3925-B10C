Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2019-10-15 16:19:03.416900487 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2019-10-15 16:19:03.432900487 +0800
@@ -6207,25 +6207,30 @@
 			}
 		}
 
+		if(!strcmp(paramList->name, "ConfigurationState")) {
+			paramValue = json_object_object_get(apWpsJobj, "X_ZYXEL_WPS_Configured");
+			if(paramValue != NULL) {
+				if(json_object_get_boolean(json_object_object_get(apWpsJobj, "X_ZYXEL_WPS_Configured"))){
+					json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string("Configured"));
+				} else {
+					json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string("Not configured"));
+				}
+				paramList++;
+				continue;
+			}
+		}
+
 		/*Not defined in tr181, give it a default value*/
 		if(!strcmp(paramList->name, "DeviceName")) {
 			json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string(WPS_DEVICENAME));
 		}else if(!strcmp(paramList->name, "DevicePassword")) {
 			json_object_object_add(*tr98Jobj, paramList->name, json_object_new_int(0));
-		}else if(!strcmp(paramList->name, "Version")) {
-			paramValue = json_object_object_get(apWpsJobj, "X_ZYXEL_WPS_V2");
-			if(json_object_get_boolean(paramValue) == true)
-				json_object_object_add(*tr98Jobj, paramList->name, json_object_new_int(2));
-			else json_object_object_add(*tr98Jobj, paramList->name, json_object_new_int(1));
 		}else if(!strcmp(paramList->name, "SetupLock")) {
 			printf("%s: SetupLock\n", __FUNCTION__);
 			json_object_object_add(*tr98Jobj, paramList->name, json_object_new_boolean(false));
 		}else if(!strcmp(paramList->name, "SetupLockedState")) {
 			printf("%s: SetupLockedState\n", __FUNCTION__);
 			json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string("UnLocked"));
-		}else if(!strcmp(paramList->name, "ConfigurationState")) {
-			//  static implement and might modify in terms of request
-			json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string("Configured"));
 		}else {
 			ztrdbg(ZTR_DL_INFO, "%s: Can't find parameter %s in TR181\n", __FUNCTION__, paramList->name);
 		}
Index: libzcfg_fe_tr98-1.0/lanDev_parameter.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev_parameter.h	2019-10-15 16:19:03.416900487 +0800
+++ libzcfg_fe_tr98-1.0/lanDev_parameter.h	2019-10-15 16:19:03.432900487 +0800
@@ -346,12 +346,12 @@
 	//{ "DeviceName", PARAMETER_ATTR_READONLY, 33, json_type_string},
 	{ "DevicePassword", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
 	//{ "UUID", PARAMETER_ATTR_READONLY, 37, json_type_string},
-	//{ "Version", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "Version", PARAMETER_ATTR_READONLY, 16, json_type_string},
 	{ "ConfigMethodsSupported", PARAMETER_ATTR_READONLY, 65, json_type_string},
 	{ "ConfigMethodsEnabled", PARAMETER_ATTR_WRITE, 256, json_type_string},
 	//{ "SetupLockedState", PARAMETER_ATTR_READONLY, 26, json_type_string},
 	//{ "SetupLock", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
-	//{ "ConfigurationState", PARAMETER_ATTR_READONLY, 16, json_type_string},
+	{ "ConfigurationState", PARAMETER_ATTR_READONLY, 16, json_type_string},
 	//{ "LastConfigurationError", PARAMETER_ATTR_READONLY, 28, json_type_string},
 	//{ "RegistrarNumberOfEntries", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
 	//{ "RegistrarEstablished", PARAMETER_ATTR_READONLY, 0, json_type_boolean},
