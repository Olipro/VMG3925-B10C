Index: ivi-1.0/ivi_nf.h
===================================================================
--- ivi-1.0.orig/ivi_nf.h	2020-02-11 03:46:29.966446393 +0000
+++ ivi-1.0/ivi_nf.h	2020-02-11 03:46:29.974446393 +0000
@@ -37,6 +37,7 @@
 #ifndef IVI_NF_H
 #define IVI_NF_H
 
+#include <linux/version.h>
 #include <linux/module.h>
 #include <linux/netfilter.h>
 #include <linux/netfilter_ipv4.h>
Index: ivi-1.0/Makefile
===================================================================
--- ivi-1.0.orig/Makefile	2020-02-11 03:46:29.966446393 +0000
+++ ivi-1.0/Makefile	2020-02-11 03:46:29.974446393 +0000
@@ -1,12 +1,11 @@
-#ivi-objs    :=  ivi_rule.o ivi_rule6.o ivi_map.o ivi_map_tcp.o ivi_xmit.o ivi_nf.o ivi_ioctl.o ivi_module.o ivi_portmap.o
-ivi-objs    :=  ivi_rule.o ivi_rule6.o ivi_map.o ivi_xmit.o ivi_nf.o ivi_ioctl.o ivi_module.o ivi_portmap.o
+obj-m		+=	ivi.o
+#ivi-objs	:=	ivi_rule.o ivi_rule6.o ivi_map.o ivi_map_tcp.o ivi_xmit.o ivi_nf.o ivi_ioctl.o ivi_module.o
+ivi-objs	:=	ivi_rule.o ivi_rule6.o ivi_map.o ivi_xmit.o ivi_nf.o ivi_ioctl.o ivi_module.o ivi_portmap.o
+#KERNELDIR	:=	/lib/modules/$(shell uname -r)/build
+PWD		:=	$(shell pwd)
 
-obj-$(CONFIG_BCM_MAP) += ivi.o
-
-EXTRA_CFLAGS += -I$(INC_BRCMDRIVER_PUB_PATH)/$(BRCM_BOARD)
-EXTRA_CFLAGS += -I$(INC_BRCMSHARED_PUB_PATH)/$(BRCM_BOARD)
-EXTRA_CFLAGS += -Werror -Wall
+all:
+	$(MAKE) -C $(KERNELDIR) M=$(PWD) modules
 
 clean:
-	rm -f core *.o *.a *.s .*.cmd *.ko
-
+	rm -rf *.ko *.o *.mod.c core Module.symvers Module.markers modules.order .*.cmd .tmp_versions
Index: ivi-1.0/ivi_nf.c
===================================================================
--- ivi-1.0.orig/ivi_nf.c	2020-02-11 03:46:29.966446393 +0000
+++ ivi-1.0/ivi_nf.c	2020-02-11 05:31:31.402386298 +0000
@@ -39,12 +39,26 @@
 
 static int running;
 
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION( 2,6,29 ))
+unsigned int nf_hook4(unsigned int hooknum, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *)) {
+#elif (LINUX_VERSION_CODE <= KERNEL_VERSION( 3,18,21 ))
+static unsigned int nf_hook4(const struct nf_hook_ops *ops, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *)) {
+#else
 static unsigned int nf_hook4(const struct nf_hook_ops *ops,
-                            struct sk_buff *skb,
-    		                const struct nf_hook_state *state) {
+		struct sk_buff *skb,
+		const struct nf_hook_state *state) {
+#endif
 	unsigned int ret;
 
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION( 3,18,21 ))
+	if ((!running) || (in != v4_dev)) {
+#else
 	if ((!running) || (state->in != v4_dev)) {
+#endif
 		return NF_ACCEPT;
 	}
 
@@ -52,18 +66,34 @@
 
 	if (ret == 0)
 		return NF_DROP;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION( 4,1,51 ))
 	else if (ret == NF_STOLEN)
 		return NF_STOLEN;
 	else
+#endif
 		return NF_ACCEPT;
 }
 
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION( 2,6,29 ))
+unsigned int nf_hook6(unsigned int hooknum, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *)) {
+#elif (LINUX_VERSION_CODE <= KERNEL_VERSION( 3,18,21 ))
+static unsigned int nf_hook6(const struct nf_hook_ops *ops, struct sk_buff *skb,
+		const struct net_device *in, const struct net_device *out,
+		int (*okfn)(struct sk_buff *)) {
+#else
 static unsigned int nf_hook6(const struct nf_hook_ops *ops,
-                            struct sk_buff *skb,
-    		                const struct nf_hook_state *state) {
+		struct sk_buff *skb,
+		const struct nf_hook_state *state) {
+#endif
 	unsigned int ret;
 
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION( 3,18,21 ))
+	if ((!running) || (in != v6_dev)) {
+#else
 	if ((!running) || (state->in != v6_dev)) {
+#endif
 		return NF_ACCEPT;
 	}
 
@@ -71,9 +101,11 @@
 
 	if (ret == 0)
 		return NF_DROP;
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION( 4,1,51 ))
 	else if (ret == NF_STOLEN)
 		return NF_STOLEN;
 	else
+#endif
 		return NF_ACCEPT;
 }
 
Index: ivi-1.0/ivi_xmit.c
===================================================================
--- ivi-1.0.orig/ivi_xmit.c	2020-02-11 03:46:29.966446393 +0000
+++ ivi-1.0/ivi_xmit.c	2020-02-11 05:47:35.978377099 +0000
@@ -240,7 +240,9 @@
 			break;
 		}
 	}
-
+#ifdef IVI_DEBUG //TungYu
+		printk(KERN_INFO"%s: fmt=%d " NIP6_FMT " prefixlen=%d " NIP4_FMT " \n", __FUNCTION__, fmt, NIP6(*v6addr), prefixlen, NIP4(addr));
+#endif
 	return 0;
 }
 
@@ -587,7 +589,11 @@
 				}
 			}
 			
+#if 1 //Tung NAT44
 			if (ivi_mode == IVI_MODE_HGW && ntohs(tcph->source) < 1024) {
+#else
+			if (((ivi_mode == IVI_MODE_HGW) || (ivi_mode == IVI_MODE_HGW_NAT44)) && ntohs(tcph->dest) < 1024) {
+#endif
 				newp = ntohs(tcph->source);
 			}
 			
@@ -623,7 +629,11 @@
 			if (udph->check == 0) 
 				flag_udp_nullcheck = 1;
 			
+#if 1 //Tung NAT44
 			if (ivi_mode == IVI_MODE_HGW && ntohs(udph->source) < 1024) {
+#else
+			if (((ivi_mode == IVI_MODE_HGW) || (ivi_mode == IVI_MODE_HGW_NAT44)) && ntohs(udph->dest) < 1024) {
+#endif
 				newp = ntohs(udph->source);
 			}
 			
@@ -1165,6 +1175,10 @@
 #if defined(CONFIG_BCM_KF_BLOG) && defined(CONFIG_BLOG)
 		blog_xfer(newskb, skb);
 #endif
+#ifdef IVI_DEBUG //TungYu
+		printk(KERN_INFO "ivi_v4v6_xmit: v6_src " NIP6_FMT " !!! v6_dst " NIP6_FMT " ~~ v4_src " NIP4_FMT " !!! v4_dst " NIP4_FMT "\
+			\n", NIP6(ip6h->saddr), NIP6(ip6h->daddr), NIP4(ip4h->saddr), NIP4(ip4h->daddr));
+#endif
 
 	netif_rx(newskb);
 	return 0;
@@ -1348,7 +1362,11 @@
 					goto out;
 				}
 				
+#if 0 //Tung NAT44
 				if (ivi_mode == IVI_MODE_HGW && ntohs(tcph->dest) < 1024) {
+#else
+				if (((ivi_mode == IVI_MODE_HGW) || (ivi_mode == IVI_MODE_HGW_NAT44)) && ntohs(tcph->dest) < 1024) {
+#endif
 					oldaddr = ntohl(ip4h->daddr);
 					oldp = ntohs(tcph->dest);
 				}
@@ -1395,7 +1413,11 @@
 					goto out;
 				}
 				
+#if 0 //Tung NAT44
 				if (ivi_mode == IVI_MODE_HGW && ntohs(udph->dest) < 1024) {
+#else
+				if (((ivi_mode == IVI_MODE_HGW) || (ivi_mode == IVI_MODE_HGW_NAT44)) && ntohs(udph->dest) < 1024) {
+#endif
 					oldaddr = ntohl(ip4h->daddr);
 					oldp = ntohs(udph->dest);
 				}
@@ -1533,6 +1555,10 @@
 			kfree_skb(newskb);
 			return -EINVAL;  // Just accept.
 		}
+#ifdef IVI_DEBUG //TungYu
+		printk(KERN_INFO "after Tran v6_src " NIP6_FMT " !!! v6_dst " NIP6_FMT " ~~ v4_src " NIP4_FMT " !!! v4_dst " NIP4_FMT "\
+			\n", NIP6(ip6h->saddr), NIP6(ip6h->daddr), NIP4(ip4h->saddr), NIP4(ip4h->daddr));
+#endif
 
 		*(__u16 *)ip4h = __constant_htons(0x4500);
 		ip4h->tot_len = htons(hlen + plen);
@@ -1583,7 +1609,11 @@
 					return 0;
 				}
 				
+#if 0 //Tung NAT44
 				if (ivi_mode == IVI_MODE_HGW && ntohs(tcph->dest) < 1024) {
+#else
+				if (((ivi_mode == IVI_MODE_HGW) || (ivi_mode == IVI_MODE_HGW_NAT44)) && ntohs(tcph->dest) < 1024) {
+#endif
 					oldaddr = ntohl(ip4h->daddr);
 					oldp = ntohs(tcph->dest);
 				}
@@ -1666,7 +1696,11 @@
 					return 0;
 				}
 					
+#if 0 //Tung NAT44
 				if (ivi_mode == IVI_MODE_HGW && ntohs(udph->dest) < 1024) {
+#else
+				if (((ivi_mode == IVI_MODE_HGW) || (ivi_mode == IVI_MODE_HGW_NAT44)) && ntohs(udph->dest) < 1024) {
+#endif
 					oldaddr = ntohl(ip4h->daddr);
 					oldp = ntohs(udph->dest);
 				}
@@ -1910,7 +1944,11 @@
 #if defined(CONFIG_BCM_KF_BLOG) && defined(CONFIG_BLOG)
 		blog_xfer(newskb, skb);
 #endif
- 
+
+#ifdef IVI_DEBUG //TungYu
+		printk(KERN_INFO "ivi_v6v4_xmit: v6_src " NIP6_FMT " !!! v6_dst " NIP6_FMT " ~~ v4_src " NIP4_FMT " !!! v4_dst " NIP4_FMT "\
+			\n", NIP6(ip6h->saddr), NIP6(ip6h->daddr), NIP4(ip4h->saddr), NIP4(ip4h->daddr));
+#endif
 	netif_rx(newskb);
 
 out:
